/*
 * This file is generated by jOOQ.
*/
package models.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Assistance implements Serializable {

    private static final long serialVersionUID = 1326362226;

    private Long          id;
    private String        motif;
    private String        declarant;
    private String        observations;
    private Boolean       isClose;
    private String        maintenacier;
    private LocalDateTime whenDone;
    private LocalDateTime whenClose;
    private Boolean       isOk;
    private LocalDateTime whenOk;
    private Boolean       newCreate;

    public Assistance() {}

    public Assistance(Assistance value) {
        this.id = value.id;
        this.motif = value.motif;
        this.declarant = value.declarant;
        this.observations = value.observations;
        this.isClose = value.isClose;
        this.maintenacier = value.maintenacier;
        this.whenDone = value.whenDone;
        this.whenClose = value.whenClose;
        this.isOk = value.isOk;
        this.whenOk = value.whenOk;
        this.newCreate = value.newCreate;
    }

    public Assistance(
        Long          id,
        String        motif,
        String        declarant,
        String        observations,
        Boolean       isClose,
        String        maintenacier,
        LocalDateTime whenDone,
        LocalDateTime whenClose,
        Boolean       isOk,
        LocalDateTime whenOk,
        Boolean       newCreate
    ) {
        this.id = id;
        this.motif = motif;
        this.declarant = declarant;
        this.observations = observations;
        this.isClose = isClose;
        this.maintenacier = maintenacier;
        this.whenDone = whenDone;
        this.whenClose = whenClose;
        this.isOk = isOk;
        this.whenOk = whenOk;
        this.newCreate = newCreate;
    }

    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getMotif() {
        return this.motif;
    }

    public void setMotif(String motif) {
        this.motif = motif;
    }

    public String getDeclarant() {
        return this.declarant;
    }

    public void setDeclarant(String declarant) {
        this.declarant = declarant;
    }

    public String getObservations() {
        return this.observations;
    }

    public void setObservations(String observations) {
        this.observations = observations;
    }

    public Boolean getIsClose() {
        return this.isClose;
    }

    public void setIsClose(Boolean isClose) {
        this.isClose = isClose;
    }

    public String getMaintenacier() {
        return this.maintenacier;
    }

    public void setMaintenacier(String maintenacier) {
        this.maintenacier = maintenacier;
    }

    public LocalDateTime getWhenDone() {
        return this.whenDone;
    }

    public void setWhenDone(LocalDateTime whenDone) {
        this.whenDone = whenDone;
    }

    public LocalDateTime getWhenClose() {
        return this.whenClose;
    }

    public void setWhenClose(LocalDateTime whenClose) {
        this.whenClose = whenClose;
    }

    public Boolean getIsOk() {
        return this.isOk;
    }

    public void setIsOk(Boolean isOk) {
        this.isOk = isOk;
    }

    public LocalDateTime getWhenOk() {
        return this.whenOk;
    }

    public void setWhenOk(LocalDateTime whenOk) {
        this.whenOk = whenOk;
    }

    public Boolean getNewCreate() {
        return this.newCreate;
    }

    public void setNewCreate(Boolean newCreate) {
        this.newCreate = newCreate;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Assistance (");

        sb.append(id);
        sb.append(", ").append(motif);
        sb.append(", ").append(declarant);
        sb.append(", ").append(observations);
        sb.append(", ").append(isClose);
        sb.append(", ").append(maintenacier);
        sb.append(", ").append(whenDone);
        sb.append(", ").append(whenClose);
        sb.append(", ").append(isOk);
        sb.append(", ").append(whenOk);
        sb.append(", ").append(newCreate);

        sb.append(")");
        return sb.toString();
    }
}
