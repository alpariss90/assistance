/*
 * This file is generated by jOOQ.
*/
package models.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VAssistance implements Serializable {

    private static final long serialVersionUID = -171327790;

    private Long          id;
    private String        motif;
    private String        declarant;
    private String        observations;
    private Boolean       isClose;
    private String        maintenacier;
    private LocalDateTime whenDone;
    private LocalDateTime whenClose;
    private String        nomPrenom;
    private String        batiment;
    private String        niveau;
    private String        porte;
    private Boolean       isOk;
    private Boolean       newCreate;
    private LocalDateTime whenOk;
    private String        direction;

    public VAssistance() {}

    public VAssistance(VAssistance value) {
        this.id = value.id;
        this.motif = value.motif;
        this.declarant = value.declarant;
        this.observations = value.observations;
        this.isClose = value.isClose;
        this.maintenacier = value.maintenacier;
        this.whenDone = value.whenDone;
        this.whenClose = value.whenClose;
        this.nomPrenom = value.nomPrenom;
        this.batiment = value.batiment;
        this.niveau = value.niveau;
        this.porte = value.porte;
        this.isOk = value.isOk;
        this.newCreate = value.newCreate;
        this.whenOk = value.whenOk;
        this.direction = value.direction;
    }

    public VAssistance(
        Long          id,
        String        motif,
        String        declarant,
        String        observations,
        Boolean       isClose,
        String        maintenacier,
        LocalDateTime whenDone,
        LocalDateTime whenClose,
        String        nomPrenom,
        String        batiment,
        String        niveau,
        String        porte,
        Boolean       isOk,
        Boolean       newCreate,
        LocalDateTime whenOk,
        String        direction
    ) {
        this.id = id;
        this.motif = motif;
        this.declarant = declarant;
        this.observations = observations;
        this.isClose = isClose;
        this.maintenacier = maintenacier;
        this.whenDone = whenDone;
        this.whenClose = whenClose;
        this.nomPrenom = nomPrenom;
        this.batiment = batiment;
        this.niveau = niveau;
        this.porte = porte;
        this.isOk = isOk;
        this.newCreate = newCreate;
        this.whenOk = whenOk;
        this.direction = direction;
    }

    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getMotif() {
        return this.motif;
    }

    public void setMotif(String motif) {
        this.motif = motif;
    }

    public String getDeclarant() {
        return this.declarant;
    }

    public void setDeclarant(String declarant) {
        this.declarant = declarant;
    }

    public String getObservations() {
        return this.observations;
    }

    public void setObservations(String observations) {
        this.observations = observations;
    }

    public Boolean getIsClose() {
        return this.isClose;
    }

    public void setIsClose(Boolean isClose) {
        this.isClose = isClose;
    }

    public String getMaintenacier() {
        return this.maintenacier;
    }

    public void setMaintenacier(String maintenacier) {
        this.maintenacier = maintenacier;
    }

    public LocalDateTime getWhenDone() {
        return this.whenDone;
    }

    public void setWhenDone(LocalDateTime whenDone) {
        this.whenDone = whenDone;
    }

    public LocalDateTime getWhenClose() {
        return this.whenClose;
    }

    public void setWhenClose(LocalDateTime whenClose) {
        this.whenClose = whenClose;
    }

    public String getNomPrenom() {
        return this.nomPrenom;
    }

    public void setNomPrenom(String nomPrenom) {
        this.nomPrenom = nomPrenom;
    }

    public String getBatiment() {
        return this.batiment;
    }

    public void setBatiment(String batiment) {
        this.batiment = batiment;
    }

    public String getNiveau() {
        return this.niveau;
    }

    public void setNiveau(String niveau) {
        this.niveau = niveau;
    }

    public String getPorte() {
        return this.porte;
    }

    public void setPorte(String porte) {
        this.porte = porte;
    }

    public Boolean getIsOk() {
        return this.isOk;
    }

    public void setIsOk(Boolean isOk) {
        this.isOk = isOk;
    }

    public Boolean getNewCreate() {
        return this.newCreate;
    }

    public void setNewCreate(Boolean newCreate) {
        this.newCreate = newCreate;
    }

    public LocalDateTime getWhenOk() {
        return this.whenOk;
    }

    public void setWhenOk(LocalDateTime whenOk) {
        this.whenOk = whenOk;
    }

    public String getDirection() {
        return this.direction;
    }

    public void setDirection(String direction) {
        this.direction = direction;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("VAssistance (");

        sb.append(id);
        sb.append(", ").append(motif);
        sb.append(", ").append(declarant);
        sb.append(", ").append(observations);
        sb.append(", ").append(isClose);
        sb.append(", ").append(maintenacier);
        sb.append(", ").append(whenDone);
        sb.append(", ").append(whenClose);
        sb.append(", ").append(nomPrenom);
        sb.append(", ").append(batiment);
        sb.append(", ").append(niveau);
        sb.append(", ").append(porte);
        sb.append(", ").append(isOk);
        sb.append(", ").append(newCreate);
        sb.append(", ").append(whenOk);
        sb.append(", ").append(direction);

        sb.append(")");
        return sb.toString();
    }
}
